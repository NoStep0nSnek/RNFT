#include <iostream>
#include <fstream>
#include <cmath>
#include <complex> 
#include <vector>

#define SR 44000 // MUST BE A VERY HIGH NUMBER - Sample rate, in hertz.

using namespace std;
const float pi = M_PI; 
const float tau = 2*M_PI; 

vector<float> get_frequencies(vector<float> vec, int sampleRate){
    // records index of crests
    vector<int> crests;

    
    for (int i = 0; i < vec.size(); i++) {
        if (vec[i - 1] <= vec[i] && vec[i + 1] <= vec[i]) {
            crests.push_back(i);
        }
    } 

    cout << crests.size() << "S";

    vector<float> frequencies;
    for (int i = 0; i < crests.size(); i++) {
        if (i == crests.size() - 1) {
            frequencies.push_back(sampleRate / abs((crests[i - 1] - crests[i])));
        } else {
            frequencies.push_back(sampleRate / abs((crests[i] - crests[i + 1])));
        }
    }

    return frequencies;
}


vector<float> generate_sine_wave (float freq, float amplitude, float offset, int sampleRate, int phases) {
    vector<float> wave(sampleRate);
    
    float time = 0;
    for(int i = 0; i < sampleRate; i++)
    {
        auto f = (amplitude * sin(2 * M_PI * freq * time) + offset);
        time += (1.0 / sampleRate);
        wave[i] = f;
    }

    return wave;
}

int main()
{
    vector<float> wave = generate_sine_wave(250, 1000, 0, SR, 1);
    vector<float> frequencies = get_frequencies(wave, SR);
    cout << "\nRAW: ";
    for (auto &i:wave) {
        cout << i << ",";
    }
    float avg = 0;
    cout << "\n\nFREQENCIES:";
    for (auto &i:frequencies) {
        cout << i << ",";
        avg = (avg + i) / 2;
    }
    cout << "\n\n-------------------------------------------------\n\nAVG: " << round(avg);
}
